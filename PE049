#include <iostream>
using namespace std;

bool find(int number, int array[], int n){
	for (int i = 0; i < n; i++)
		if (array[i] == number)
			return true;
	return false;
}

void bubble_sort(int array[], int n){
	int temp1;
	for (int i = 0; i < n - 1; i++){
		for (int j = 0; j < n - i - 1; j++){
			if (array[j] > array[j + 1]){
				//cout<<array[j]<<" "<<array[j + 1]<<endl;
				temp1 = array[j];
				array[j] = array[j + 1];
				array[j + 1] = temp1;
			}
		}
	}
	if (array[0] == 0){
		temp1 = array[0];
		array[0] = array[1];
		array[1] = temp1;
	}
}

int rearrange(int number){
	int new_num = 0;
	int temp = number;
	int count = 0;
	while (temp > 0){
		temp = temp/10;
		count++;
	}
	int num_array[count];
	for (int i = 0; i < count; i++){
		num_array[i] = number % 10;
		number = number/10;
	//	cout<<num_array[i]<<endl;
	}
	bubble_sort(num_array, count);
	for (int i = 0; i < count; i++){
		new_num = 10*new_num + num_array[i];
		//cout<<new_num<<endl;
	}
	return new_num;
}

int main(){
	int* prime = new int [10000] ();
	prime[0] = 1;
	prime[1] = 1;
	for (int i = 2; i <= 5000; i++){
		for (int j = 2*i; j < 10000; j+=i){
			prime[j] = 1;
		}
	}
	int idx = 0;
	int prime_array[1229];
	for (int i = 0; i < 10000; i++){
		if (prime[i] == 0){
			prime_array[idx] = i;
			idx++;
		}
	}
	//cout<<prime_array[74]<<" "<<prime_array[130]<<" "<<prime_array[158]<<endl;
	int count = idx;
	int prime_array_o[count];
	for (int i = 0; i < count; i++){
		//cout<<prime_array[i]<<" ";
		prime_array_o[i] = prime_array[i];
		prime_array[i] = rearrange(prime_array[i]);
		//cout<<prime_array[i]<<endl;
	}
	//cout<<prime_array[90]<<" "<<prime_array[117]<<endl;
	
	for (int i = 0; i < count; i++){
		int c = 0;
		for (int j = i + 1; j < count; j++)
			if (prime_array[i] == prime_array[j] && find(prime_array_o[j] + prime_array_o[j] - prime_array_o[i], prime_array_o, count) && rearrange(prime_array_o[j] + prime_array_o[j] - prime_array_o[i]) == prime_array[i]){
				cout<<prime_array_o[i]<<" "<<prime_array_o[j]<<" "<<prime_array_o[j] + prime_array_o[j] - prime_array_o[i]<<endl;
			}
		//if (c == 3)
		//	cout<<prime_array[i]<<endl;
	}
	return 0;
}
