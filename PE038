#include <iostream>
using namespace std;

void bubble_sort(int array[], int n){
	int temp1;
	for (int i = 0; i < n - 1; i++){
		for (int j = 0; j < n - i - 1; j++){
			if (array[j] > array[j + 1]){
				//cout<<array[j]<<" "<<array[j + 1]<<endl;
				temp1 = array[j];
				array[j] = array[j + 1];
				array[j + 1] = temp1;
			}
		}
	}
	if (array[0] == 0){
		temp1 = array[0];
		array[0] = array[1];
		array[1] = temp1;
	}
}

int rearrange(int number){
	int new_num = 0;
	int temp = number;
	int count = 0;
	while (temp > 0){
		temp = temp/10;
		count++;
	}
	int num_array[count];
	for (int i = 0; i < count; i++){
		num_array[i] = number % 10;
		number = number/10;
	}
	bubble_sort(num_array, count);
	for (int i = 0; i < count; i++){
		new_num = 10*new_num + num_array[i];
		//cout<<new_num<<endl;
	}
	return new_num;
}

bool is_Pandigital(int number){
    if (rearrange(number) == 123456789)
        return true;
    return false;
}

//Concatenate N1 and N2 (in that order)
int concatenate(int N1, int N2){
    int temp = N2;
    int count = 0;
    while (temp > 0){
        temp = temp/10;
        count++;
    }
    int multiplicand = 1;
    for (int i = 0; i < count; i++)
        multiplicand = multiplicand*10;
    return multiplicand*N1 + N2;
}

int main() {
    int max = 0;
	for (int i = 0; i < 10000; i++){
	    int number = i;
	    int multiplier = 2;
	    while (multiplier < 10 && number < 1000000000){
	        number = concatenate(number, number*multiplier);
	        multiplier++;
	        if (is_Pandigital(number) && number > max)
	            max = number;
	    }
	}
	cout<<max;
	return 0;
}
