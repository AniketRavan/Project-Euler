#include <iostream>
using namespace std;
#include <math.h>

bool is_prime(long long number){
    if (number % 2 == 0)
        return false;
    for (int i = 3; i <= floor(sqrt(number)); i+=2)
        if (number % i == 0)
            return false;
    return true;
}

void bubble_sort(int array[], int n){ // modified bubble_sort
	int temp1;
	for (int i = 0; i < n - 1; i++){
		for (int j = 0; j < n - i - 1; j++){
			if (array[j] > array[j + 1]){
				//cout<<array[j]<<" "<<array[j + 1]<<endl;
				temp1 = array[j];
				array[j] = array[j + 1];
				array[j + 1] = temp1;
			}
		}
	}
    int idx = 0;
if (array[0] == 0){       
        while (array[idx] == 0){
            idx++;
        }
        //cout<<idx<<endl;
        array[0] = array[idx];
        array[idx] = 0;
    }
}

int rearrange(int number){
	int new_num = 0;
	int temp = number;
	int count = 0;
	while (temp > 0){
		temp = temp/10;
		count++;
	}
	int num_array[count];
	for (int i = 0; i < count; i++){
		num_array[i] = number % 10;
		number = number/10;
	}
	bubble_sort(num_array, count);
	for (int i = 0; i < count; i++){
		new_num = 10*new_num + num_array[i];
		//cout<<new_num<<endl;
	}
	return new_num;
}

bool is_nPandigital(int number){
    int temp = number;
    int count = 0;
    while (temp > 0){
        temp = temp/10;
        count++;
    }
    temp = 1;
    for (int i = 2; i <= count; i++){
        temp = 10*temp + i;
    }
    //cout<<temp<<" "<<number<<endl;
    if (rearrange(number) == temp)
        return true;
    return false;
}

int main() {
    long long i;
    for (i = 1000000000; i > 100; i--){
        if (is_nPandigital(i)){
            if (is_prime(i)){
                break;
            }
        }
    }
    cout<<i<<endl;
	return 0;
}
